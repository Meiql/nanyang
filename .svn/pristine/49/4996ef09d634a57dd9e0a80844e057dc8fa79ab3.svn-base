package org.springrain.erp.hr.service.impl;

import java.io.File;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.collections.CollectionUtils;
import org.springframework.stereotype.Service;
import org.springrain.erp.hr.entity.OaUser;
import org.springrain.erp.hr.service.IOaUserService;
import org.springrain.frame.entity.IBaseEntity;
import org.springrain.frame.util.Finder;
import org.springrain.frame.util.HttpClientUtils;
import org.springrain.frame.util.JsonUtils;
import org.springrain.frame.util.Page;
import org.springrain.frame.util.ReturnDatas;
import org.springrain.frame.util.TranMap2beanUtils;
import org.springrain.system.service.BaseSpringrainServiceImpl;


/**
 * TODO 在此加入类描述
 * @copyright {@link weicms.net}
 * @author springrain<Auto generate>
 * @version  2017-07-31 10:02:36
 * @see org.springrain.erp.gz.service.impl.OaUser
 */
@Service("oaUserService")
public class OaUserServiceImpl extends BaseSpringrainServiceImpl implements IOaUserService {

   
    @Override
	public String  save(Object entity ) throws Exception{
	      OaUser oaUser=(OaUser) entity;
	       return super.save(oaUser).toString();
	}

    @Override
	public String  saveorupdate(Object entity ) throws Exception{
	      OaUser oaUser=(OaUser) entity;
		 return super.saveorupdate(oaUser).toString();
	}
	
	@Override
    public Integer update(IBaseEntity entity ) throws Exception{
	 OaUser oaUser=(OaUser) entity;
	return super.update(oaUser);
    }
    @Override
	public OaUser findOaUserById(Object id) throws Exception{
	 return super.findById(id,OaUser.class);
	}
	
/**
 * 列表查询,每个service都会重载,要把sql语句封装到service中,Finder只是最后的方案
 * @param finder
 * @param page
 * @param clazz
 * @param o
 * @return
 * @throws Exception
 */
        @Override
    public <T> List<T> findListDataByFinder(Finder finder, Page page, Class<T> clazz,
			Object o) throws Exception{
			 return super.findListDataByFinder(finder,page,clazz,o);
			}
	/**
	 * 根据查询列表的宏,导出Excel
	 * @param finder 为空则只查询 clazz表
	 * @param ftlurl 类表的模版宏
	 * @param page 分页对象
	 * @param clazz 要查询的对象
	 * @param o  querybean
	 * @return
	 * @throws Exception
	 */
		@Override
	public <T> File findDataExportExcel(Finder finder,String ftlurl, Page page,
			Class<T> clazz, Object o)
			throws Exception {
			 return super.findDataExportExcel(finder,ftlurl,page,clazz,o);
		}

	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public void saveOaUser() throws Exception {
		String url = "http://10.0.200.132:8098/crmoa/mzywxpc/mzywxpower/system/org/md/00/query/alluserorg";
		String str = HttpClientUtils.sendHttpPost(url);
		Finder f = Finder.getDeleteFinder(OaUser.class);
		super.update(f);
		ReturnDatas returnObject = JsonUtils.readValue(str,ReturnDatas.class);
		String status = returnObject.getStatus();
		if(!status.equals("success")){
			return ;
		}
		Map<String, List> mapStr = returnObject.getMap();
		List<LinkedHashMap> listUser = (List<LinkedHashMap>) mapStr.get("userlist");
		List<OaUser> userList = new ArrayList<OaUser>();
		if(CollectionUtils.isNotEmpty(listUser)){
			for(LinkedHashMap lmap : listUser){
				OaUser oauser = new OaUser();
				TranMap2beanUtils.transMap2Bean(lmap, oauser); 
				userList.add(oauser);
			}
		}
		super.save(userList);
	}

	
    
}
